# -*- coding: utf-8 -*-
"""0_PyBindNumba.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TA2XBE6bYg5T8nWZm2Qtqifk-4Ii0jED

Based on https://github.com/jpivarski/python-numpy-mini-course/blob/evaluated/6-compilers.ipynb .
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext ipybind

import numpy
import numba
import time


# Commented out IPython magic to ensure Python compatibility.
# %%time
# quick(8000, 12000)

@numba.vectorize
def as_ufunc(c, maxiterations):
    z = c
    for i in range(maxiterations):
        z = z**2 + c
        if abs(z) > 2:
            return i
    return maxiterations

def run_numba_2(height, width, maxiterations=20):
    y, x = numpy.ogrid[-1:0:height*1j, -1.5:0:width*1j]
    c = x + y*1j
    return as_ufunc(c, maxiterations)

# Commented out IPython magic to ensure Python compatibility.
# %%time
# run_numba_2(8000, 12000)

@numba.njit
def run_numba(height, width, maxiterations):
    fractal = numpy.empty((height, width), dtype=numpy.int32)
    for h in range(height):
        for w in range(width):
            c = ((h-1)/height - 1) + 1.5j*((w-1)/width - 1)
            z = c
            fractal[h, w] = maxiterations

            for i in range(maxiterations):
                z = z**2 + c
                if abs(z) > 2:
                    fractal[h, w] = i
                    break
    return fractal

# Commented out IPython magic to ensure Python compatibility.
# %%time
# run_numba(8000, 12000, 20)

@numba.njit(parallel=True)
def run_numba_p(height, width, maxiterations):
    fractal = numpy.empty((height, width), dtype=numpy.int32)
    for h in numba.prange(height):
        for w in range(width):
            c = ((h-1)/height - 1) + 1.5j*((w-1)/width - 1)
            z = c
            fractal[h, w] = maxiterations

            for i in range(maxiterations):
                z = z**2 + c
                if abs(z) > 2:
                    fractal[h, w] = i
                    break
    return fractal

# Commented out IPython magic to ensure Python compatibility.
# %%time
# run_numba_p(8000, 12000, 20)

# Commented out IPython magic to ensure Python compatibility.
# %%time
# run_numba_p(8000, 12000, 20)
